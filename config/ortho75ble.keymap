/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&lt {
    flavor = "balanced";
    tapping-term-ms = <100>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_bksp {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
            layers = <0>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <34 35>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <49 50>;
        };

        combo_ctrlenter {
            bindings = <&kp LC(ENTER)>;
            key-positions = <65 50>;
        };

        combo_pad {
            bindings = <&tog 1>;
            key-positions = <71 70>;
        };
    };

    macros {
        default: default {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N2 &kp N1 &kp N2 &kp N1 &kp N2 &kp N3>;
            label = "DEFAULT";
        };
    };

    behaviors {
        auto_shift: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC     &auto_shift LS(N1) N1  &auto_shift LS(N2) N2  &auto_shift LS(N3) N3  &auto_shift LS(N4) N4  &auto_shift LS(N5) N5  &auto_shift LS(MINUS) MINUS  &auto_shift LS(EQUAL) EQUAL                &kp F12                                      &auto_shift LS(N6) N6  &auto_shift LS(N7) N7  &auto_shift LS(N8) N8        &auto_shift LS(N9) N9    &auto_shift LS(N0) N0      &kp BSPC
&kp GRAVE   &kp Q                  &kp W                  &kp E                  &kp R                  &kp T                  &kp F7                       &auto_shift LS(LEFT_BRACKET) LEFT_BRACKET  &auto_shift LS(RIGHT_BRACKET) RIGHT_BRACKET  &kp Y                  &kp U                  &kp I                        &kp O                    &kp P                      &auto_shift LS(BACKSLASH) BACKSLASH
&kp TAB     &kp A                  &kp S                  &kp D                  &kp F                  &kp G                  &kp F4                       &kp F5                                     &auto_shift LS(SQT) SQT                      &kp H                  &kp J                  &kp K                        &kp L                    &auto_shift LS(SEMI) SEMI  &kp ENTER
&kp LSHIFT  &kp Z                  &kp X                  &kp C                  &kp V                  &kp B                  &kp F1                       &kp F2                                     &auto_shift LS(SLASH) SLASH                  &kp N                  &kp M                  &auto_shift LS(COMMA) COMMA  &auto_shift LS(DOT) DOT  &kp UP                     &kp DELETE
&kp LCTRL   &mo 2                  &kp LWIN               &kp LALT               &kp SPACE              &kp SPACE              &tog 0                       &tog 1                                     &tog 2                                       &kp SPACE              &kp SPACE              &auto_shift LS(FSLH) FSLH    &kp LEFT                 &kp DOWN                   &kp RIGHT
            >;
        };

        lower_layer {
            bindings = <
&trans  &trans                 &trans                 &trans                       &trans                 &trans                 &kp F10  &kp F11  &kp F12  &trans                 &trans                 &trans                 &trans        &trans           &trans
&trans  &auto_shift LS(N1) N1  &auto_shift LS(N2) N2  &auto_shift LS(N3) NUMBER_3  &auto_shift LS(N4) N4  &auto_shift LS(N5) N5  &kp F7   &kp F8   &kp F9   &auto_shift LS(N7) N7  &auto_shift LS(N8) N8  &auto_shift LS(N9) N9  &kp KP_PLUS   &kp KP_ASTERISK  &trans
&trans  &kp SINGLE_QUOTE       &kp DOUBLE_QUOTES      &kp MINUS                    &kp EQUAL              &kp ENTER              &kp F4   &kp F5   &kp F6   &auto_shift LS(N4) N4  &auto_shift LS(N5) N5  &auto_shift LS(N6) N6  &kp KP_MINUS  &kp KP_DIVIDE    &trans
&trans  &kp HOME               &kp END                &kp LC(PG_UP)                &kp LC(PAGE_DOWN)      &kp NON_US_BACKSLASH   &kp F1   &kp F2   &kp F3   &auto_shift LS(N1) N1  &auto_shift LS(N2) N2  &auto_shift LS(N3) N3  &kp COMMA     &trans           &trans
&trans  &trans                 &trans                 &trans                       &trans                 &trans                 &tog 0   &tog 1   &tog 2   &auto_shift LS(N0) N0  &auto_shift LS(N0) N0  &kp KP_DOT             &trans        &trans           &trans
            >;
        };

        raise_layer {
            bindings = <
&kp C_VOLUME_UP    &kp F1    &kp F2     &kp F3       &kp F4         &kp F5      &kp KP_NUMLOCK  &kp SLASH     &kp ASTERISK  &kp MINUS  &kp CAPSLOCK  &kp INSERT    &kp SCROLLLOCK  &kp PRINTSCREEN   &kp DELETE
&kp C_VOLUME_DOWN  &kp F6    &kp F7     &kp F8       &kp F9         &kp F10     &kp N7          &kp N8        &kp N9        &kp PLUS   &kp PG_UP     &kp UP_ARROW  &kp PAGE_DOWN   &kp LEFT_BRACKET  &kp PG_UP
&kp K_MUTE         &trans    &trans     &trans       &kp F11        &kp F12     &kp NUMBER_4    &kp N5        &kp NUMBER_6  &kp PLUS   &kp LEFT      &kp DOWN      &kp RIGHT       &kp LEFT_BRACKET  &kp PAGE_DOWN
&trans             &default  &trans     &trans       &trans         &trans      &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp ENTER  &kp LS(N9)    &kp LS(N0)    &trans          &trans            &kp HOME
&kp C_AL_CALC      &trans    &kp LG(L)  &kp PAGE_UP  &kp PAGE_DOWN  &kp LA(F4)  &kp N0          &kp N0        &kp PERIOD    &kp ENTER  &tog 0        &tog 1        &tog 2          &trans            &kp END
            >;
        };

        adjust_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
