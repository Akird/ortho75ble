/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    flavor = "balanced";
    tapping-term-ms = <100>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_bksp {
            bindings = <&kp BACKSPACE>;
            key-positions = <4 5>;
            layers = <0>;
        };
    };

    macros {
        macro0: macro0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N2 &kp N1 &kp N2 &kp N1 &kp N2 &kp N3>;
            label = "MACRO0";
        };
    };

    behaviors {
        auto_shift: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC     &kp 1  &kp 2     &kp 3     &kp 4        &kp 5         &trans  &trans  &trans    &kp 6      &kp 7  &kp 8                        &kp 9                    &kp 0                      &kp BSPC            
&kp ESC     &kp Q  &kp W     &kp E     &kp R        &kp T         &trans  &trans  &trans   &kp Y      &kp U  &kp I                        &kp O                    &kp P                      &kp BSPC
&kp TAB     &kp A  &kp S     &kp D     &kp F        &kp G         &trans  &trans  &trans    &kp H      &kp J  &kp K                        &kp L                    &auto_shift LS(SEMI) SEMI  &kp ENTER
&kp LSHIFT  &kp Z  &kp X     &kp C     &kp V        &kp B        &kp PAGE_UP  &trans    &kp HOME  &kp N      &kp M  &auto_shift LS(COMMA) COMMA  &auto_shift LS(DOT) DOT  &kp UP                     &kp DELETE
&kp LCTRL   &mo 3  &kp LWIN  &kp LALT  &lt 1 SPACE  &lt 1 SPACE  &kp PAGE_DOWN &trans   &kp END   &kp SPACE  &mo 2  &auto_shift LS(FSLH) FSLH    &kp LEFT                 &kp DOWN                   &kp RIGHT
            >;
        };

        lower_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
            >;
        };

        raise_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
            >;
        };

        adjust_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
            >;
        };
    };
};
